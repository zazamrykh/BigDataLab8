apiVersion: batch/v1
kind: Job
metadata:
  name: mssql-init
  namespace: {{ .Values.namespace }}
spec:
  template:
    spec:
      containers:
      - name: mssql-init
        image: mcr.microsoft.com/mssql-tools
        env:
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MSSQL_SA_PASSWORD
        command:
        - "/bin/bash"
        - "-c"
        - |
          echo 'Waiting for MSSQL...'
          until /opt/mssql-tools/bin/sqlcmd -S mssql-service -U sa -P $SA_PASSWORD -Q 'SELECT 1' &>/dev/null; do
            echo 'MSSQL not ready yet...'
            sleep 5
          done
          echo 'MSSQL is ready, running scripts'
          /opt/mssql-tools/bin/sqlcmd -S mssql-service -U sa -P $SA_PASSWORD -Q "
          IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = '{{ .Values.secrets.mssql.database }}')
          BEGIN
              CREATE DATABASE [{{ .Values.secrets.mssql.database }}]
          END
          "
          /opt/mssql-tools/bin/sqlcmd -S mssql-service -U sa -P $SA_PASSWORD -d {{ .Values.secrets.mssql.database }} -Q "
          IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'food_products')
          BEGIN
              CREATE TABLE food_products (
                  id INT IDENTITY(1,1) PRIMARY KEY,
                  product_name NVARCHAR(255),
                  energy_kcal FLOAT,
                  fat FLOAT,
                  carbohydrates FLOAT,
                  proteins FLOAT,
                  sugars FLOAT,
                  completeness FLOAT,
                  nova_group FLOAT,
                  ecoscore_score FLOAT,
                  nutriscore_score FLOAT,
                  ingredients_n FLOAT,
                  additives_n FLOAT,
                  scans_n FLOAT
              )
          END
          "
          /opt/mssql-tools/bin/sqlcmd -S mssql-service -U sa -P $SA_PASSWORD -d {{ .Values.secrets.mssql.database }} -Q "
          IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'clustering_results')
          BEGIN
              CREATE TABLE clustering_results (
                  id INT PRIMARY KEY,
                  product_name NVARCHAR(255),
                  cluster_id INT
              )
          END
          "
          /opt/mssql-tools/bin/sqlcmd -S mssql-service -U sa -P $SA_PASSWORD -d {{ .Values.secrets.mssql.database }} -Q "
          IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'cluster_centers')
          BEGIN
              CREATE TABLE cluster_centers (
                  cluster_id INT,
                  feature_name NVARCHAR(255),
                  feature_value FLOAT,
                  PRIMARY KEY (cluster_id, feature_name)
              )
          END
          "
      restartPolicy: Never
  backoffLimit: 4
